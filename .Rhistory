usethis::use_r("get.wrf.files")
usethis::use_r("get_wrf_files")
usethis::use_r("wrf_download")
usethis::use_r("load_by_variable")
usethis::use_r("find_nearest_point")
devtools::load_all()
devtools::check()
usethis::use_gpl3_license()
devtools::check()
?wrf.download
devtools::document()
library(era5.aws)
?era5.aws::era.crop()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?project
library("terra")
?project
devtools::document()
devtools::check()
available::available("aws.wrfsmn", browse = F)
version
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_news_md()
devtools::check()
library("rhub")
install.packages("rhub")
rhub::check_for_cran()
devtools::check()
rhub::check_for_cran()
usethis::use_vignette("Package Introduction")
usethis::use_vignette("Package-Introduction")
rhub::check_for_cran()
install.packages("goodpractice")
libary(goodpractice)
library(goodpractice)
goodpractice::gp()
devtools::spell_check()
devtools::release()
devtools::check_win_devel()
devtools::check_win_devel()
devtools::release()
usethis::use_cran_comments()
devtools::release()
?which
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
usethis::use_test()
devtools::load_all()
get.wrf.files(2023, 1, 1, "00", "01H")
length(get.wrf.files(2023, 1, 1, "00", "01H"))
length(get.wrf.files(2023, 1, 1, "00", "24H"))
length(get.wrf.files(2023, 1, 1, "12", "24H"))
length(get.wrf.files(2023, 1, 1, "06", "24H"))
length(get.wrf.files(2024, 1, 1, "06", "24H"))
length(get.wrf.files(2024, 1, 1, "00", "01H"))
length(get.wrf.files(2024, 1, 1, "06", "01H"))
length(get.wrf.files(2024, 1, 1, "12", "01H"))
length(get.wrf.files(2024, 1, 1, "18", "01H"))
length(get.wrf.files(2024, 1, 1, "00", "10M"))
length(get.wrf.files(2024, 1, 1, "12", "10M"))
length(get.wrf.files(2024, 1, 1, "06", "10M"))
length(get.wrf.files(2024, 1, 1, "00", "24H"))
length(get.wrf.files(2024, 1, 1, "06", "24H"))
length(get.wrf.files(2024, 1, 1, "12", "24H"))
length(get.wrf.files(2024, 1, 1, "8", "24H"))
length(get.wrf.files(2024, 1, 1, "18", "24H"))
devtools::test()
clas(get.wrf.files(2024, 1, 1, "18", "24H"))
class(get.wrf.files(2024, 1, 1, "18", "24H"))
expect_s3_class(get.wrf.files(2024, 1, 1, "18", "24H"), "character")
expect_output_file(wrf.download("DATA/WRF/DET/2023/01/01/00/WRFDETAR_01H_20230101_00_064.nc"))
wrf.files(2024, 1, 1, "18", "24H")
get.wrf.files(2024, 1, 1, "18", "24H")
?which
spatSample()
devtools::check()
devtools::check()
get.wrf.files(2024, 1, 1, "18", "24H")
wrf.download("DATA/WRF/DET/2024/01/01/18/WRFDETAR_24H_20240101_18_000.nc")
devtools::check()
list.files("./data", full.names = TRUE)
devtools::check()
devtools::check()
library("qpdf")
install.packages("qpdf")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::test()
rhub::check_for_cran()
rhub::check_for_cran()
devtools::load_all()
?get.wrf.files
?wrf.download
devtools::load_all()
?get.wrf.files
devtools::check_win_devel()
results <- rhub::check_for_cran()
results
results <- rhub::check_for_cran()
results
results$cran_summary()
results$cran_summary()
results
results
results$cran_summary()
usethis::use_cran_comments()
results <- rhub::check_for_cran()
results$cran_summary()
results
results$cran_summary()
results$cran_summary()
results$cran_summary()
usethis::use_cran_comments()
results$cran_summary()
?which
devtools::load_all()
?find.nearest.point
devtools::load_all()
?find.nearest.point
devtools::load_all()
?find.nearest.point
devtools::check()
devtools::load_all()
?find.nearest.point
devtools::check()
rhub::check_for_cran()
devtools::release()
devtools::release()
devtools::spell_check()
devtools::release()
devtools::check_rhub()
devtools::release()
devtools::check()
usethis::use_r("multiple_guidance")
# abre punto modelado
X <- read.table("/home/gdiaz/Documentos/Yacyreta/Guidance/pruebaVIC_fluxes_-27.1875_-55.8125")
# abre punto modelado
X <- read.table("/home/gdiaz/Documentos/Desarrollos/Yacyreta/Guidance/pruebaVIC_fluxes_-27.1875_-55.8125")
X <- X[1097:3880,]
# abre observaciones en punto
obs <- readRDS("/home/gdiaz/Documentos/Desarrollos/Yacyreta/Guidance/obs_evapo_Encarnacion.rds")
obs <- obs[which(obs$Fechas >= "2015-01-01" & obs$Fechas <= "2022-08-15"),]
X <- cbind(obs, X) ; X <- X[,c(-3, -4, -5)]
class(X)
class(X$Fechas)
c("dl", "de")
class(c("dl", "de"))
pr <- c("dl", "de")
pr.1 <- "y"
as.formula(paste0(pr.1, " ~ ", paste(pr, collapse= "+")))
library("stats")
source("~/Documentos/packages/aws.wrfsmn/R/multiple_guidance.R")
multiple.guidance(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_"))
nombres.columnas <- c('Dates', 'evapo.Encarnacion',
'OUT_PREC',
'OUT_EVAP',
'OUT_RUNOFF',
'OUT_BASEFLOW',
'OUT_ASAT',
'OUT_ROOTMOIST',
'OUT_SOIL_MOIST_lyr_1',
'OUT_SOIL_MOIST_lyr_2',
'OUT_SOIL_MOIST_lyr_3',
'OUT_EVAP_BARE',
'OUT_EVAP_CANOP',
'OUT_PET_SATSOIL',
'OUT_SURF_TEMP',
'OUT_SOIL_TEMP_lyr_1',
'OUT_SOIL_TEMP_lyr_2',
'OUT_SOIL_TEMP_lyr_3',
'OUT_AIR_TEMP')
colnames(X) <- nombres.columnas
multiple.guidance(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"))
class(multiple.guidance(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC")))
usethis::use_r("mg_evaluation")
source("~/Documentos/packages/aws.wrfsmn/R/mg_evaluation.R")
mg.evaluation(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"), "OUT_EVAP", )
sd <- multiple.guidance(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"))
mg.evaluation(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"), "OUT_EVAP", sd)
library("hydroGOF")
mg.evaluation(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"), "OUT_EVAP", sd)
sd <- mg.evaluation(X, "evapo.Encarnacion", c("OUT_EVAP", "OUT_PREC"), "OUT_EVAP", sd)
class(sd)
class(sd[[1]])
class(sd[[2]])
ploting <- function(data = data)
{
data.tbl <- as_tibble(data)
colnames(data.tbl) <- c('fecha', 'obs', 'mod', 'guid')
data.tbl$fecha <- as.Date(data.tbl$fecha)
data.tbl$obs <- as.numeric(data.tbl$obs)
data.tbl$mod <- as.numeric(data.tbl$mod)
data.tbl$guid <- as.numeric(data.tbl$guid)
fig <- ggplot(data.tbl) + ggtitle("CorrecciÃ³n de modelado") +
theme(panel.background = element_rect(fill = '#ececec', colour = 'black')) +
theme(plot.title = element_text(hjust = 1)) +
geom_line(aes(fecha, obs, colour = "observaciÃ³n", group = 1), size = 0.9) +
geom_point(aes(fecha, obs), size = 1.5) +
geom_line(aes(fecha, mod, colour = "modelaciÃ³n"), size = 0.9) +
geom_line(aes(fecha, guid, colour = "guidance"), size = 0.9) +
theme(axis.text = element_text(size = 14))
print(fig)
}
ploting(sd[[1]])
library("dplyr")
ploting(sd[[1]])
library("ggplot")
ploting(sd[[1]])
library("ggplot2")
ploting(sd[[1]])
usethis::use_r("daily2monthly")
source("~/Documentos/packages/aws.wrfsmn/R/daily2monthly.R")
daily2monthly(sd[[1]])
library("lubridate")
daily2monthly(sd[[1]])
class(sd[[1]])
class(sd[[1]][,1])
class(sd[[1]][,2])
sd[[1]]
daily2monthly(sd[[1]])
class(daily2monthly(sd[[1]]))
source("~/Documentos/packages/aws.wrfsmn/R/daily2monthly.R")
daily2monthly(sd[[1]])
usethis::use_r("ploting")
source("~/Documentos/packages/aws.wrfsmn/R/ploting.R")
ploting(sd[[1]])
class(ploting(sd[[1]]))
ploting(sd[[1]])
ploting(sd[[1]])
ploting(daily2monthly(sd[[1]]))
devtools::load_all()
devtools::check()
devtools::load_all()
library("dpolyr")
library("dplyr")
library("stats")
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
eva
devtools::load_all()
devtools::load_all()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
?ploting
?dataset
data(eva)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
?wrf.download
?which
devtools::load_all()
?wrf.download
devtools::load_all()
?wrf.download
devtools::load_all()
?wrf.download
?multiple.guidance
?wrf.download
devtools::load_all()
devtools::check()
?wrf.download
?multiple.guidance
?get.wrf.files
?find.nearest.point
?load.by.variable
devtools::load_all()
devtools::check()
detach("stats")
detach(stats)
detach("package:dplyr")
devtools::load_all()
devtools::load_all()
detach("package:stats", unload = TRUE)
devtools::load_all()
devtools::check()
usethis::use_vignette("Multiple Linear Regression Correction (Guidance)")
usethis::use_vignette("Multiple-Linear-Regression-Correction-(Guidance)")
usethis::use_vignette("Multiple-Linear-Regression-Correction")
head(eva)
head(eva)
load("./data/Evapo_dataset.RData")
devtools::load_all()
devtools::check()
rhub::check_for_cran()
usethis::use_cran_comments()
results <- rhub::check_for_cran()
results$cran_summary()
results
results$cran_summary()
results$cran_summary()
results$cran_summary()
results <- rhub::check_for_cran()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
usethis::use_cran_comments()
results$cran_summary()
usethis::use_cran_comments()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::check()
?tools::resaveRdaFiles
getwd()
tools::resaveRdaFiles("/home/gdiaz/Documentos/packages/aws.wrfsmn/data/")
devtools::load_all()
devtools::check()
eva
devtools::document()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
eva
load(eva)
usethis::use_data(eva)
usethis::use_data(eva)
eva
data(eva)
eva
data(eva)
devtools::load_all()
devtools::check()
load("~/Documentos/packages/aws.wrfsmn/data/eva.rda")
load("~/Documentos/packages/aws.wrfsmn/data/Evapo_dataset.RData")
load("~/Documentos/packages/aws.wrfsmn/data/Evapo_dataset.RData")
eva
eva <- eva[,-7]
eva <- eva[,-7]
eva <- eva[,-8]
eva <- eva[,-8]
eva <- eva[,-8]
eva <- eva[,-9]
eva <- eva[,-10]
eva <- eva[,-10]
eva <- eva[,-10]
eva <- eva[,-10]
save(eva, file="data/eva.RData")
eva
load(eva)
data(eva)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
data(eva)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
data(eva)
head(eva)
ploting(eva)
daily2monthly(eva)
?eva
?mg.evaluation
?wrf.download
rhub::check_for_cran()
devtools::load_all()
devtools::check()
devtools::check_win_devel()
devtools::release()
spelling::spell_check()
spell_check()
usethis::spell_check()
devtools::release()
usethis::use_cran_comments()
results <- rhub::check_for_cran()
results$cran_summary()
View(results)
results
results
results
results$cran_summary()
results
results
results
results$cran_summary()
usethis::use_cran_comments()
results$cran_summary()
devtools::release()
devtools::release()
devtools::release()
devtools::release()
devtools::release()
?eva
?eva
